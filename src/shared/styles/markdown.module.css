/* Markdown-specific styles that complement Tailwind's typography plugin */
.markdown {
  @apply max-w-none;
  color: var(--color-foreground);
  font-size: 0.875rem;
  line-height: 1.7;

  /* Typography spacing */
  & > * + * {
    margin-top: 1.5rem;
  }

  /* Headings */
  & h1,
  & h2,
  & h3,
  & h4,
  & h5,
  & h6 {
    color: var(--color-foreground);
    font-weight: 600;
    line-height: 1.25;
    margin-top: 2rem;
    margin-bottom: 1rem;
  }

  & h1 {
    font-size: 2.25rem;
  }
  & h2 {
    font-size: 1.875rem;
  }
  & h3 {
    font-size: 1.5rem;
  }
  & h4 {
    font-size: 1.25rem;
  }
  & h5 {
    font-size: 1.125rem;
  }
  & h6 {
    font-size: 1rem;
  }

  /* Paragraphs */
  & p {
    margin-top: 1.25rem;
    margin-bottom: 1.25rem;
  }

  /* Links */
  & a {
    color: var(--color-primary);
    text-decoration: underline;
    text-underline-offset: 2px;
    font-weight: 500;

    &:hover {
      opacity: 0.8;
    }
  }

  /* Lists */
  & ul,
  & ol {
    padding-left: 1.625rem;
    margin-top: 1.25rem;
    margin-bottom: 1.25rem;
  }

  & li {
    margin-top: 0.5rem;
    margin-bottom: 0.5rem;
  }

  /* Blockquotes */
  & blockquote {
    font-style: italic;
    border-left: 0.25rem solid var(--color-border);
    padding-left: 1rem;
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
    color: var(--color-muted-foreground);
  }

  /* Horizontal rules */
  & hr {
    border-color: var(--color-border);
    margin-top: 3rem;
    margin-bottom: 3rem;
  }

  /* Tables */
  & table {
    width: 100%;
    table-layout: auto;
    text-align: left;
    margin-top: 2rem;
    margin-bottom: 2rem;
  }

  & thead {
    border-bottom: 1px solid var(--color-border);
  }

  & th {
    padding: 0.75rem;
    font-weight: 600;
  }

  & td {
    padding: 0.75rem;
    border-bottom: 1px solid var(--color-border);
  }

  /* Code */
  & code {
    font-size: 0.875em;
  }

  & pre {
    margin-top: 1.5rem;
    margin-bottom: 1.5rem;
  }

  /* Strong/Bold */
  & strong {
    color: var(--color-foreground);
    font-weight: 600;
  }
}

/* Code block styling */
.codeBlock {
  @apply relative;

  &:hover .codeLanguage {
    opacity: 1;
  }
}

.codeBlockPlain {
  background-color: var(--color-muted);
  border-radius: 0.75rem;
  padding: 1rem;
  margin: 1rem 0;
}

.codeBlockPlain pre {
  background-color: transparent;
  font-size: 0.875rem;
  line-height: 1.8;
  color: var(--color-foreground);
  font-family:
    ui-monospace, SFMono-Regular, "SF Mono", Consolas, "Liberation Mono", Menlo,
    monospace;
  white-space: pre-wrap;
  overflow-x: auto;
}

.codeBlockHighlighted {
  @apply relative;
}

.codeBlockHighlighted pre {
  background: linear-gradient(
    135deg,
    var(--color-muted) 0%,
    oklch(from var(--color-muted) calc(l - 0.02) c h) 100%
  );
  border-radius: 0.75rem;
  padding: 1.25rem;
  margin: 1rem 0;
  overflow: auto;
  border: 1px solid var(--color-border);
  box-shadow:
    0 1px 3px 0 rgb(0 0 0 / 0.1),
    0 1px 2px -1px rgb(0 0 0 / 0.1);
}

.codeBlockHighlighted code {
  color: var(--color-foreground);
  font-family:
    ui-monospace, SFMono-Regular, "SF Mono", Consolas, "Liberation Mono", Menlo,
    monospace;
  font-size: 0.875rem;
  line-height: 1.8;
}

.codeLanguage {
  position: absolute;
  top: 0.75rem;
  right: 0.75rem;
  font-size: 0.75rem;
  color: var(--color-muted-foreground);
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  opacity: 0.6;
  transition: opacity 0.2s;
}

/* Inline code styling */
.inlineCode {
  background-color: var(--color-muted);
  color: var(--color-foreground);
  padding: 0.125rem 0.5rem;
  border-radius: 0.375rem;
  font-family:
    ui-monospace, SFMono-Regular, "SF Mono", Consolas, "Liberation Mono", Menlo,
    monospace;
  font-size: 0.875rem;
  border: 1px solid oklch(from var(--color-border) l c h / 0.5);
  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
}

/* Syntax highlighting theme variables */
.syntaxTheme {
  /* Base colors */
  --syntax-comment: oklch(55% 0.05 240);
  --syntax-punctuation: oklch(65% 0.08 240);
  --syntax-property: oklch(55% 0.18 250);
  --syntax-boolean: oklch(60% 0.15 30);
  --syntax-string: oklch(50% 0.15 140);
  --syntax-operator: oklch(65% 0.12 320);
  --syntax-keyword: oklch(55% 0.18 290);
  --syntax-function: oklch(55% 0.15 60);
  --syntax-regex: oklch(50% 0.15 180);
  --syntax-important: oklch(55% 0.15 15);
  --syntax-variable: oklch(60% 0.12 320);
}
